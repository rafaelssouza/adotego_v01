package adotego.view;

import adotego.controller.UsuarioController;
import adotego.modelos.Endereco;
import adotego.modelos.Tabela_usuarios;
import adotego.modelos.Usuario;
import adotego.util.FontHelper;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;

public class Detalhe_usuario extends javax.swing.JFrame {
    
    private Usuario usuario;
    private final Tabela_usuarios tabela_usuarios_model;


    public Detalhe_usuario() {
        initComponents();
        label_aux.setVisible(false);
        tabela_usuarios_model = new Tabela_usuarios();
        jTable_usuarios.setModel(tabela_usuarios_model);
        this.setLocationRelativeTo(null);
        usuario = new Usuario();
        usuario.setEndereco(new Endereco());
        this.setTitle("Cadastro Usuario");
        
        configurarTabela();
        configurarFontes();
        configurarIcone();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabelNome = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jLabelDataNascimento = new javax.swing.JLabel();
        jLabelFixo = new javax.swing.JLabel();
        jLabelCelular = new javax.swing.JLabel();
        jLabelCpf = new javax.swing.JLabel();
        txt_nome = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        txtx_nascimento = new javax.swing.JTextField();
        txt_telefone_celular = new javax.swing.JTextField();
        txt_cpf = new javax.swing.JTextField();
        jLabelCidade = new javax.swing.JLabel();
        jLabelUf = new javax.swing.JLabel();
        jLabelCep = new javax.swing.JLabel();
        jLabelRua = new javax.swing.JLabel();
        jLabelBairro = new javax.swing.JLabel();
        txt_cidade = new javax.swing.JTextField();
        txt_uf = new javax.swing.JTextField();
        txt_cep = new javax.swing.JTextField();
        txt_rua = new javax.swing.JTextField();
        txt_bairro = new javax.swing.JTextField();
        jLabelNumero = new javax.swing.JLabel();
        txt_numero = new javax.swing.JTextField();
        txt_id = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_usuarios = new javax.swing.JTable();
        btn_add_usuario = new javax.swing.JButton();
        jLabelUsuariosCadastrados = new javax.swing.JLabel();
        label_aux = new javax.swing.JLabel();
        txt_telefone_fixo = new javax.swing.JFormattedTextField();
        btn_salvar_usuario = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();
        jButton_nova_adocao = new javax.swing.JButton();
        jButton_nova_doacao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detalhes ");
        setResizable(false);

        jInternalFrame1.setBackground(new java.awt.Color(255, 255, 255));
        jInternalFrame1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jInternalFrame1.setTitle("Cadastro de Usuarios");
        jInternalFrame1.setVisible(true);

        jLabelNome.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelNome.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelNome.setText("Nome");

        jLabelEmail.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelEmail.setText("Email");

        jLabelDataNascimento.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelDataNascimento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelDataNascimento.setText("Data Nascimento");

        jLabelFixo.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelFixo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelFixo.setText("Telefone-fixo");

        jLabelCelular.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelCelular.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCelular.setText("Telefone-celular");

        jLabelCpf.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelCpf.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCpf.setText("CPF");

        txt_nome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nomeFocusLost(evt);
            }
        });

        txt_email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_emailFocusLost(evt);
            }
        });

        txtx_nascimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtx_nascimentoFocusLost(evt);
            }
        });

        txt_telefone_celular.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_telefone_celularFocusLost(evt);
            }
        });

        txt_cpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cpfFocusLost(evt);
            }
        });

        jLabelCidade.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelCidade.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCidade.setText("Cidade");

        jLabelUf.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelUf.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelUf.setText("Estado");

        jLabelCep.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelCep.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCep.setText("CEP");

        jLabelRua.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelRua.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelRua.setText("Rua");

        jLabelBairro.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelBairro.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelBairro.setText("Bairro");

        txt_cidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cidadeFocusLost(evt);
            }
        });

        txt_uf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_ufFocusLost(evt);
            }
        });

        txt_cep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cepFocusLost(evt);
            }
        });

        txt_rua.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_ruaFocusLost(evt);
            }
        });

        txt_bairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_bairroFocusLost(evt);
            }
        });

        jLabelNumero.setFont(new java.awt.Font("Laksaman", 1, 14)); // NOI18N
        jLabelNumero.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelNumero.setText("NÂ°");

        txt_numero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_numeroFocusLost(evt);
            }
        });

        txt_id.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_id.setText("ID:");

        jTable_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_usuarios);

        btn_add_usuario.setBackground(new java.awt.Color(255, 255, 255));
        btn_add_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/left-arrow.png"))); // NOI18N
        btn_add_usuario.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_add_usuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_add_usuarioMouseClicked(evt);
            }
        });

        jLabelUsuariosCadastrados.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabelUsuariosCadastrados.setText("Usuarios Cadastrados");

        label_aux.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        label_aux.setForeground(new java.awt.Color(255, 51, 51));
        label_aux.setText(">");

        try {
            txt_telefone_fixo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btn_salvar_usuario.setBackground(new java.awt.Color(255, 255, 255));
        btn_salvar_usuario.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_salvar_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/plus.png"))); // NOI18N
        btn_salvar_usuario.setText("Salvar");
        btn_salvar_usuario.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btn_salvar_usuario.setFocusable(false);
        btn_salvar_usuario.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_salvar_usuario.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_salvar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvar_usuarioActionPerformed(evt);
            }
        });

        btn_excluir.setBackground(new java.awt.Color(255, 255, 255));
        btn_excluir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cross.png"))); // NOI18N
        btn_excluir.setText("Excluir");
        btn_excluir.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btn_excluir.setFocusable(false);
        btn_excluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_excluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        jButton_nova_adocao.setBackground(new java.awt.Color(255, 255, 255));
        jButton_nova_adocao.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton_nova_adocao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/animal-paw-print.png"))); // NOI18N
        jButton_nova_adocao.setText("Nova AdoÃ§Ã£o");
        jButton_nova_adocao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jButton_nova_adocao.setFocusable(false);
        jButton_nova_adocao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_nova_adocao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_nova_adocao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_nova_adocaoActionPerformed(evt);
            }
        });

        jButton_nova_doacao.setBackground(new java.awt.Color(255, 255, 255));
        jButton_nova_doacao.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton_nova_doacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/coins.png"))); // NOI18N
        jButton_nova_doacao.setText("Nova DoaÃ§Ã£o");
        jButton_nova_doacao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jButton_nova_doacao.setFocusable(false);
        jButton_nova_doacao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_nova_doacao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDataNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(jLabelFixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelCelular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelCpf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_nome)
                                    .addComponent(txt_email)
                                    .addComponent(txtx_nascimento)
                                    .addComponent(txt_telefone_celular)
                                    .addComponent(txt_cpf)
                                    .addComponent(txt_telefone_fixo, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(btn_salvar_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                                                .addComponent(jLabelNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txt_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(157, 157, 157))
                                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabelCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                                    .addComponent(jLabelUf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabelCep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabelRua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabelBairro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txt_cidade, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                                    .addComponent(txt_uf)
                                                    .addComponent(txt_cep)
                                                    .addComponent(txt_rua)
                                                    .addComponent(txt_bairro))))
                                        .addComponent(btn_add_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton_nova_doacao, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton_nova_adocao, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(txt_id)))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(label_aux, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsuariosCadastrados, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelUsuariosCadastrados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(txt_id)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNome)
                    .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCidade)
                    .addComponent(txt_cidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmail)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUf)
                    .addComponent(txt_uf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDataNascimento)
                            .addComponent(txtx_nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCep)
                            .addComponent(txt_cep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelFixo)
                            .addComponent(jLabelRua)
                            .addComponent(txt_rua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_telefone_fixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btn_add_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCelular)
                    .addComponent(txt_telefone_celular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNumero)
                    .addComponent(txt_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelCpf)
                        .addComponent(txt_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_bairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelBairro)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label_aux)
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_salvar_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(btn_excluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_nova_doacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_nova_adocao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*
        MÃ©todo responsÃ¡vel por recuperar o usuario selecionado na tabela, dae 
        preencher todos os inputs com o respectivo usuario.         
    */
    private void btn_add_usuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_add_usuarioMouseClicked
        
        int id_selected = tabela_usuarios_model
                //retorna -1 caso nao tenho nenhuma linha selecionada
                .getIdIntoTheRow(jTable_usuarios);
        
        if (id_selected != -1) {
            Usuario usuario = new UsuarioController()
                    .find(id_selected);
            this.build(usuario);
        }
        
    }//GEN-LAST:event_btn_add_usuarioMouseClicked

    /*
        MÃ©todo responsÃ¡vel por salvar o objeto do tipo Usuario da tela em questÃ£o
        e salva-lo no banco de dados. Antes de salvar o objeto chamamos todos os
        metodos FocusLost para setarmos todas os propriedades novamente(desta 
        forma nÃ£o Ã© necessÃ¡rio apertar a tecla tab depois do ultimo campo de 
        texto
    */
    private void btn_salvar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvar_usuarioActionPerformed
        txt_bairroFocusLost(null);
        txt_cepFocusLost(null);
        txt_nomeFocusLost(null);        
        txt_telefone_celularFocusLost(null);
        txt_ufFocusLost(null);
        txt_telefone_fixoFocusLost(null);
        txtx_nascimentoFocusLost(null);
        txt_ruaFocusLost(null);
        txt_cidadeFocusLost(null);
        txt_numeroFocusLost(null);
        txt_emailFocusLost(null);
        txt_cpfFocusLost(null);
        
        if (usuario.getId() != 0){
            new adotego.controller.UsuarioController().update(usuario);
            tabela_usuarios_model.atualizarTabela();
        }else{
            if (true) {            
                new adotego.controller.UsuarioController().salvar(usuario);
                tabela_usuarios_model.atualizarTabela();
                this.reset_campos();
            } else {
                System.out.println("campos invalidos");
            }
        }
    }//GEN-LAST:event_btn_salvar_usuarioActionPerformed

    /*
       Este mÃ©todo Ã© invocado sempre que o txt_nome perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no campo_nome
    */
    private void txt_nomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nomeFocusLost
        //se o campo nao for vazio 
        if (!txt_nome.getText().isEmpty()) {
            usuario.setNome(txt_nome.getText().trim());
        }
    }//GEN-LAST:event_txt_nomeFocusLost

     /*
       Este mÃ©todo Ã© invocade sempre q o txt_nascimento perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no campo_txt_nascimento
    */
    private void txtx_nascimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtx_nascimentoFocusLost
        try {
            //se o campo nao for vazio 
            if (!txtx_nascimento.getText().isEmpty()) {
                SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                Date date_parse = df.parse(txtx_nascimento.getText());
                Calendar cal = Calendar.getInstance();
                cal.setTime(date_parse);
                usuario.setData_nascimento(cal);
                
            }
        } catch (ParseException ex) {
            Logger.getLogger(Detalhe_usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtx_nascimentoFocusLost
    /*
       Este mÃ©todo Ã© invocade sempre q o txt_telefone_celular perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no campo txt_telefone_celular
    */
    private void txt_telefone_celularFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_telefone_celularFocusLost
        //se o campo nao for vazio 
        if (!txt_telefone_celular.getText().isEmpty()) {
            usuario.setTelefone_celular(txt_telefone_celular.getText());
        }        
    }//GEN-LAST:event_txt_telefone_celularFocusLost

    /*
       Este mÃ©todo Ã© invocade sempre q o txt_cpf perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no campo_txt_cpf
    */
    private void txt_cpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cpfFocusLost
        //se o campo nao for vazio 
        if (!txt_cpf.getText().isEmpty()) {
            usuario.setCpf(txt_cpf.getText());
        }
    }//GEN-LAST:event_txt_cpfFocusLost

    /*
       Este mÃ©todo Ã© invocade sempre q o txt_cidade perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no txt_cidade
    */
    private void txt_cidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cidadeFocusLost
        //se o campo nao for vazio 
        if (!txt_cidade.getText().isEmpty()) {
            usuario.getEndereco().setCidade(txt_cidade.getText());
        }
    }//GEN-LAST:event_txt_cidadeFocusLost

    /*
       Este mÃ©todo Ã© invocade sempre q o txt_uf perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no txt_uf
    */
    private void txt_ufFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_ufFocusLost
        //se o campo nao for vazio 
        if (!txt_uf.getText().isEmpty()) {
            usuario.getEndereco().setUf(txt_uf.getText());
        }
    }//GEN-LAST:event_txt_ufFocusLost

    /*
       Este mÃ©todo Ã© invocade sempre q o txt_cep perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no txt_cep
    */
    private void txt_cepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cepFocusLost
        //se o campo nao for vazio 
        if (!txt_cep.getText().isEmpty()) {
            usuario.getEndereco().setCep(txt_cep.getText());
        }
    }//GEN-LAST:event_txt_cepFocusLost

    /*
       Este mÃ©todo Ã© invocade sempre q o txt_rua perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no txt_rua
    */
    private void txt_ruaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_ruaFocusLost
        //se o campo nao for vazio 
        if (!txt_rua.getText().isEmpty()) {
            usuario.getEndereco().setRua(txt_rua.getText());
        }
    }//GEN-LAST:event_txt_ruaFocusLost

    /*
       Este mÃ©todo Ã© invocade sempre q o txt_numero perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no campo txt_numero
    */
    private void txt_numeroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_numeroFocusLost
        //se o campo nao for vazio 
        if (!txt_numero.getText().isEmpty()) {
            usuario.getEndereco().setNumero(Integer.parseInt(txt_numero.getText()));
        }
    }//GEN-LAST:event_txt_numeroFocusLost

    /*
       Este mÃ©todo Ã© invocade sempre q o txt_bairro perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no campo_txt_bairro
    */
    private void txt_bairroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_bairroFocusLost
        //se o campo nao for vazio 
        if (!txt_bairro.getText().isEmpty()) {
            usuario.getEndereco().setBairro(txt_bairro.getText());
        }
    }//GEN-LAST:event_txt_bairroFocusLost
    
    /*
        Este mÃ©todo identifica qual usuario esta sendo utilizado para preencher
        os inputs e realiza a exclusÃ£o dele no banco de daodos.
    */
    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        if (usuario.getId() != null) {
            new UsuarioController().delete(usuario.getId());
        } else {
            label_aux.setText("Selecione um na tabela usuario para excluir");
            label_aux.setVisible(true);
        }
    }//GEN-LAST:event_btn_excluirActionPerformed
    
    /*
       Este mÃ©todo Ã© invocade sempre q o txt_email  perde o foco, e Ã© responsÃ¡vel
       por setar no objeto usuario desta tela o valor que estiver no campo_txt_email
    */
    private void txt_emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_emailFocusLost
        //se o campo nao for vazio
        if (!txt_email.getText().isEmpty()) {
            usuario.setEmail(txt_email.getText().trim());
        }
    }//GEN-LAST:event_txt_emailFocusLost

    private void jButton_nova_adocaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_nova_adocaoActionPerformed
        new Nova_Adocao().setVisible(true);
    }//GEN-LAST:event_jButton_nova_adocaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Detalhe_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Detalhe_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Detalhe_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Detalhe_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Detalhe_usuario().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add_usuario;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_salvar_usuario;
    private javax.swing.JButton jButton_nova_adocao;
    private javax.swing.JButton jButton_nova_doacao;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabelBairro;
    private javax.swing.JLabel jLabelCelular;
    private javax.swing.JLabel jLabelCep;
    private javax.swing.JLabel jLabelCidade;
    private javax.swing.JLabel jLabelCpf;
    private javax.swing.JLabel jLabelDataNascimento;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelFixo;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelNumero;
    private javax.swing.JLabel jLabelRua;
    private javax.swing.JLabel jLabelUf;
    private javax.swing.JLabel jLabelUsuariosCadastrados;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_usuarios;
    private javax.swing.JLabel label_aux;
    private javax.swing.JTextField txt_bairro;
    private javax.swing.JTextField txt_cep;
    private javax.swing.JTextField txt_cidade;
    private javax.swing.JTextField txt_cpf;
    private javax.swing.JTextField txt_email;
    private javax.swing.JLabel txt_id;
    private javax.swing.JTextField txt_nome;
    private javax.swing.JTextField txt_numero;
    private javax.swing.JTextField txt_rua;
    private javax.swing.JTextField txt_telefone_celular;
    private javax.swing.JFormattedTextField txt_telefone_fixo;
    private javax.swing.JTextField txt_uf;
    private javax.swing.JTextField txtx_nascimento;
    // End of variables declaration//GEN-END:variables

    //atribui o Usuario passado como parametro ao Usuario da variÃ¡vel local
    //e preenche todos os inputs com as propriedades deste usuario
    public void build(Usuario u) {
        usuario = u;
        preencher_campos();
    }
    //preenchar os campos do fomulario com os dados do usuario armazenado na 
    //variÃ¡vel local
    private void preencher_campos() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        txt_id.setText(String
                .valueOf(txt_id.getText()
                        .concat(String.valueOf(usuario.getId()))));        
        txt_nome.setText(usuario.getNome());
        txt_email.setText(usuario.getEmail());
        txt_cpf.setText(usuario.getCpf());
        txt_telefone_fixo.setText(usuario.getTelefone_fixo());
        txt_telefone_celular.setText(usuario.getTelefone_celular());
        txtx_nascimento.setText(sdf.format(usuario.getData_nascimento().getTime()));
        txt_bairro.setText(usuario.getEndereco().getBairro());
        txt_cidade.setText(usuario.getEndereco().getCidade());
        txt_uf.setText(usuario.getEndereco().getUf());
        txt_cep.setText(usuario.getEndereco().getCep());
        txt_numero.setText(String.valueOf(usuario.getEndereco().getNumero()));
        txt_rua.setText(usuario.getEndereco().getRua());
        
        if (!this.isVisible()) {
            this.setVisible(true);
        }
    }

    //tornar todos os campos editÃ¡veis
    public void habilitar_campos_input() {
        txt_nome.setEditable(true);
        txt_telefone_fixo.setEditable(true);
        txt_cpf.setEditable(true);
        txt_telefone_fixo.setEditable(true);
        txt_telefone_celular.setEditable(true);
        txtx_nascimento.setEditable(true);
        txt_bairro.setEditable(true);
        txt_cidade.setEditable(true);
        txt_uf.setEditable(true);
        txt_cep.setEditable(true);
        txt_numero.setEditable(true);
        txt_rua.setEditable(true);
    }

    //tornar todos os campos do formulario nÃ£o editavel
    public void desabilitar_campos_input() {
        txt_nome.setEditable(false);
        txt_telefone_fixo.setEditable(false);
        txt_cpf.setEditable(false);
        txt_telefone_fixo.setEditable(false);
        txt_telefone_celular.setEditable(false);
        txtx_nascimento.setEditable(false);
        txt_bairro.setEditable(false);
        txt_cidade.setEditable(false);
        txt_uf.setEditable(false);
        txt_cep.setEditable(false);
        txt_numero.setEditable(false);
        txt_rua.setEditable(false);
    }

    /*
        Este mÃ©todo retorna true se algum dos valores do formulÃ¡rios de 
        cadastro de usuarios estiver vazio
     */
    private boolean campos_preenchidos() {
        String mensagem = "Existem campos vazios";
        if (txt_nome.getText().isEmpty()
                || txt_telefone_fixo.getText().isEmpty()
                || txt_telefone_fixo.getText().isEmpty()
                || txt_telefone_celular.getText().isEmpty()
                || txtx_nascimento.getText().isEmpty()
                || txt_bairro.getText().isEmpty()
                || txt_cep.getText().isEmpty()
                || txt_uf.getText().isEmpty()
                || txt_cidade.getText().isEmpty()
                || txt_rua.getText().isEmpty()
                || txt_numero.getText().isEmpty()
                || txt_cpf.getText().isEmpty()) {
            
            if (!label_aux.getText().contains(mensagem)) {
                label_aux.setText(label_aux.getText()
                        .concat("\n" + mensagem));
                label_aux.setVisible(true);
                return false;
            } else {
                label_aux.getText().replace(mensagem, "");
            }            
        } else {
            return true;
        }
        return false;
    }    
    //preenche todo so inputs com uma String vazia, simulando estar vazias.
    public void reset_campos() {
        this.txt_nome.setText("");
        this.txt_telefone_fixo.setText("");
        this.txt_cpf.setText("");
        this.txtx_nascimento.setText("");
        this.txt_email.setText("");
        this.txt_telefone_celular.setText("");
        this.txt_cidade.setText("");
        this.txt_telefone_fixo.setText("");
        this.txt_numero.setText("");
        this.txt_rua.setText("");
        this.txt_uf.setText("");
        this.txt_bairro.setText("");
        this.txt_cep.setText("");
    }
    
    /*
        EstÃ© mÃ©todo Ã© responsÃ¡vel por verificar se todos os campos estÃ£o devidamente
        preenchidos a nÃ­vel de usuario.
    */
    private boolean validarCamposUsuario() {
        return campos_preenchidos() && validar_cpf() && validar_telefone_fixo()
                && validar_telefone_celular();
    }
    //vlaidaÃ§Ã£o  CPF
    private boolean validar_cpf() {
        if (!(txt_cpf.getText().length() == 11)) {
            label_aux.setText(label_aux.getText().concat("\nCPF invÃ¡lido"));
            return false;
        } else {
            char[] array = txt_cpf.getText().toCharArray();
            for (char d : array) {
                if (!Character.isDigit(d)) {
                    return false;
                }
            }
        }        
        
        return true;
        
    }
    //validar telefone fixo
    private boolean validar_telefone_fixo() {
        return txt_telefone_fixo.getText().length() == 8
                || txt_telefone_fixo.getText().length() == 12;
    }
    //validar telefone celular
    private boolean validar_telefone_celular() {
        return txt_telefone_celular.getText().length() == 8
                || txt_telefone_celular.getText().length() == 12;
    }
    
    private void txt_telefone_fixoFocusLost(Object object) {
        if (!txt_telefone_fixo.getText().isEmpty()) {
            usuario.setTelefone_fixo(txt_telefone_fixo.getText());
        }
        
    }

    private void configurarFontes() {
        
         FontHelper fh = new FontHelper();
        //inputs
         this.txt_nome.setFont(fh.getLatoLight(16f));
        this.txt_telefone_fixo.setFont(fh.getLatoLight(16f));
        this.txt_cpf.setFont(fh.getLatoLight(16f));
        this.txtx_nascimento.setFont(fh.getLatoLight(16f));
        this.txt_email.setFont(fh.getLatoLight(16f));
        this.txt_telefone_celular.setFont(fh.getLatoLight(16f));
        this.txt_cidade.setFont(fh.getLatoLight(16f));
        this.txt_telefone_fixo.setFont(fh.getLatoLight(16f));
        this.txt_numero.setFont(fh.getLatoLight(16f));
        this.txt_rua.setFont(fh.getLatoLight(16f));
        this.txt_uf.setFont(fh.getLatoLight(16f));
        this.txt_bairro.setFont(fh.getLatoLight(16f));
        this.txt_cep.setFont(fh.getLatoLight(16f));
        
        jLabelNome.setFont(fh.getLatoRegular(17f));
        jLabelFixo.setFont(fh.getLatoRegular(17f));
        jLabelCpf.setFont(fh.getLatoRegular(17f));
        jLabelDataNascimento.setFont(fh.getLatoRegular(17f));
        jLabelEmail.setFont(fh.getLatoRegular(17f));
        jLabelCelular.setFont(fh.getLatoRegular(17f));
        jLabelCidade.setFont(fh.getLatoRegular(17f));
        jLabelFixo.setFont(fh.getLatoRegular(17f));
        jLabelNumero.setFont(fh.getLatoRegular(17f));
        jLabelRua.setFont(fh.getLatoRegular(17f));
        jLabelUf.setFont(fh.getLatoRegular(17f));
        jLabelBairro.setFont(fh.getLatoRegular(17f));
        jLabelCep.setFont(fh.getLatoRegular(17f));
        
        btn_add_usuario.setFont(fh.getLatoBold(16f));
        btn_excluir.setFont(fh.getLatoBold(16f));
        btn_salvar_usuario.setFont(fh.getLatoBold(16f));
        
        jTable_usuarios.setFont(fh.getLatoRegular(16f));
        jTable_usuarios.getTableHeader().setFont(fh.getLatoBold(15f));
        jLabelUsuariosCadastrados.setFont(fh.getLatoBold(16f));
     
        
        
    }

    private void configurarTabela() {
        int columnCount = jTable_usuarios.getColumnCount();         
        DefaultTableCellRenderer dtcr;
        jTable_usuarios.getTableHeader().setBackground(Color.WHITE);
        
        jTable_usuarios.setRowHeight(26);
        int width = jTable_usuarios.getWidth();
        for (int i = 0; i < columnCount; i++) {
            TableColumn column = jTable_usuarios.getColumnModel().getColumn(i);
            dtcr = new DefaultTableCellRenderer();
            switch (i) {
                case 0:{
                    dtcr.setHorizontalAlignment(SwingConstants.CENTER);
                    column.setCellRenderer(dtcr);
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.25))));
                    
                }break;
                case 1:{
                    dtcr.setHorizontalAlignment(SwingConstants.CENTER);
                    column.setCellRenderer(dtcr);
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.75))));
                    
                }break;    
                    
            }
            
        }
    }

    private void configurarIcone() {
        ImageIcon icon = new ImageIcon("src/icones/Favicon.png");
        
        
        this.setIconImage(icon.getImage());
    }
}
