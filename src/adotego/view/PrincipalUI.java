
package adotego.view;

import adotego.controller.UsuarioController;
import adotego.modelos.Animal;
import adotego.modelos.Especie;
import adotego.modelos.Modelo_tabela_adocoes;
import adotego.modelos.Raca;
import adotego.modelos.Situacao;
import adotego.modelos.Tabela_animais;
import adotego.modelos.Tabela_usuario_completa;
import adotego.modelos.Usuario;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableColumn;

/**
 *
 * @author tmichelini
 */
public class PrincipalUI extends javax.swing.JFrame {
    
    private Tabela_usuario_completa model_tabela_usuarios_completa;
    private Tabela_animais model_tabela_animais;
    private Modelo_tabela_adocoes model_tabela_adocoes;
    
    /**
     * Creates new form PrincipalUI
     */
    public PrincipalUI() {
        initComponents();
        //abrir no centro da janela
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setLocationRelativeTo(null);
        init_jCombo_box_especie_pesquisa();
        init_jCombo_box_raca_pesquisa();
        init_jCombo_box_situacao();
        iniciar_tabelas();
        atualizar_informacoes();
        
        
    }
    //fazendo teste para commitar @RodrigoStuani
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jFrame1 = new javax.swing.JFrame();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_qnt_adocoes = new javax.swing.JLabel();
        txt_qnt_animais_disponiveis = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_qnt_animais_disponiveis1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_adocoes = new javax.swing.JTable();
        txt_total_doacoes = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btn_atualizar_tabela_adocoes = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_usuarios = new javax.swing.JTable();
        btn_excluir_usuario = new javax.swing.JButton();
        btn_editar_usuario = new javax.swing.JButton();
        txt_pesquisar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jCombo_box_opcoes_busca = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btn_atualiza_tabela_usuarios = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_animais = new javax.swing.JTable();
        btn_editar_animal = new javax.swing.JButton();
        btn_excluir_animal = new javax.swing.JButton();
        btn_filtrar_animais = new javax.swing.JButton();
        jCombo_box_especie_pesquisa = new javax.swing.JComboBox<>();
        jCombo_box_raca_pesquisa = new javax.swing.JComboBox<>();
        jComboBox_situacao_pesquisa = new javax.swing.JComboBox<>();
        btn_novo_cadastro = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        btn_nova_adocao = new javax.swing.JMenu();
        jMenuItem_nova_raca = new javax.swing.JMenuItem();
        jMenuItem_nova_especie = new javax.swing.JMenuItem();
        btn_novo_usuario = new javax.swing.JMenuItem();
        jMenuItem_novo_animal = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 255));
        jTabbedPane1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        jInternalFrame2.setVisible(true);
        jInternalFrame2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jInternalFrame2FocusGained(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("FreeMono", 0, 18))); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Total de adoções realizadas:");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Quantidade de animais disponíveis:");

        txt_qnt_adocoes.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_qnt_adocoes.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_qnt_adocoes.setText("txt_qnt_adocoes");

        txt_qnt_animais_disponiveis.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_qnt_animais_disponiveis.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_qnt_animais_disponiveis.setText("txt_qnt_animais_disponiveis");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Quantidade de animais disponíveis:");

        txt_qnt_animais_disponiveis1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_qnt_animais_disponiveis1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_qnt_animais_disponiveis1.setText("txt_qnt_animais_disponiveis");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_qnt_animais_disponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txt_qnt_adocoes, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_qnt_animais_disponiveis1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_qnt_adocoes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_qnt_animais_disponiveis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_qnt_animais_disponiveis1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Adoções", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("FreeSans", 0, 18))); // NOI18N

        jTable_adocoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable_adocoes);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Total em doações:");

        btn_atualizar_tabela_adocoes.setBackground(new java.awt.Color(255, 255, 255));
        btn_atualizar_tabela_adocoes.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btn_atualizar_tabela_adocoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/refresh-page-option.png"))); // NOI18N
        btn_atualizar_tabela_adocoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atualizar_tabela_adocoesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_atualizar_tabela_adocoes, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_total_doacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_total_doacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_atualizar_tabela_adocoes))
                .addContainerGap())
        );

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame2)
        );

        jTabbedPane1.addTab("Controle FInanceiro", jPanel2);

        jInternalFrame3.setVisible(true);

        jTable_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_usuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_usuarios);

        btn_excluir_usuario.setBackground(new java.awt.Color(255, 255, 255));
        btn_excluir_usuario.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_excluir_usuario.setText("Excluir");
        btn_excluir_usuario.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btn_excluir_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluir_usuarioActionPerformed(evt);
            }
        });

        btn_editar_usuario.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar_usuario.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_editar_usuario.setText("Editar");
        btn_editar_usuario.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btn_editar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editar_usuarioActionPerformed(evt);
            }
        });

        txt_pesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pesquisarKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("Pesquisar por ");

        jCombo_box_opcoes_busca.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jCombo_box_opcoes_busca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "CPF", "Email" }));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton1.setText("Novo Cadastro");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        btn_atualiza_tabela_usuarios.setBackground(new java.awt.Color(255, 255, 255));
        btn_atualiza_tabela_usuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/refresh-page-option.png"))); // NOI18N
        btn_atualiza_tabela_usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atualiza_tabela_usuariosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1121, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_excluir_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_editar_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                        .addComponent(btn_atualiza_tabela_usuarios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCombo_box_opcoes_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCombo_box_opcoes_busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btn_atualiza_tabela_usuarios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_editar_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_excluir_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame3)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame3)
        );

        jTabbedPane1.addTab("Usuarios", jPanel1);

        jInternalFrame1.setVisible(true);

        jTable_animais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable_animais);

        btn_editar_animal.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar_animal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_editar_animal.setText("Editar");
        btn_editar_animal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn_editar_animal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editar_animalActionPerformed(evt);
            }
        });

        btn_excluir_animal.setBackground(new java.awt.Color(255, 255, 255));
        btn_excluir_animal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_excluir_animal.setText("Excluir");
        btn_excluir_animal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn_excluir_animal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluir_animalActionPerformed(evt);
            }
        });

        btn_filtrar_animais.setBackground(new java.awt.Color(255, 255, 255));
        btn_filtrar_animais.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btn_filtrar_animais.setText("Filtrar");
        btn_filtrar_animais.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn_filtrar_animais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_filtrar_animaisActionPerformed(evt);
            }
        });

        jCombo_box_especie_pesquisa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCombo_box_especie_pesquisaItemStateChanged(evt);
            }
        });

        btn_novo_cadastro.setBackground(new java.awt.Color(255, 255, 255));
        btn_novo_cadastro.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_novo_cadastro.setText("Novo Cadastro");
        btn_novo_cadastro.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btn_novo_cadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_novo_cadastroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(572, 829, Short.MAX_VALUE)
                        .addComponent(btn_novo_cadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_excluir_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_editar_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jCombo_box_especie_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCombo_box_raca_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_situacao_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_filtrar_animais, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_filtrar_animais, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jComboBox_situacao_pesquisa)
                        .addComponent(jCombo_box_raca_pesquisa)
                        .addComponent(jCombo_box_especie_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_excluir_animal, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btn_editar_animal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_novo_cadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane1.addTab("Animais", jPanel3);

        jMenuBar1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        btn_nova_adocao.setText("Arquivo");
        btn_nova_adocao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nova_adocaoActionPerformed(evt);
            }
        });

        jMenuItem_nova_raca.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jMenuItem_nova_raca.setText("Nova Raça");
        jMenuItem_nova_raca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_nova_racaActionPerformed(evt);
            }
        });
        btn_nova_adocao.add(jMenuItem_nova_raca);

        jMenuItem_nova_especie.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jMenuItem_nova_especie.setText("Nova Especie");
        jMenuItem_nova_especie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_nova_especieActionPerformed(evt);
            }
        });
        btn_nova_adocao.add(jMenuItem_nova_especie);

        btn_novo_usuario.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btn_novo_usuario.setText("Novo Usuario");
        btn_novo_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_novo_usuarioActionPerformed(evt);
            }
        });
        btn_nova_adocao.add(btn_novo_usuario);

        jMenuItem_novo_animal.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jMenuItem_novo_animal.setText("Novo Animal");
        jMenuItem_novo_animal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_novo_animalActionPerformed(evt);
            }
        });
        btn_nova_adocao.add(jMenuItem_novo_animal);

        jMenuItem1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jMenuItem1.setText("Nova Adoção");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        btn_nova_adocao.add(jMenuItem1);

        jMenuBar1.add(btn_nova_adocao);

        jMenu2.setText("Pesquisar");
        jMenuBar1.add(jMenu2);

        jMenu1.setText("Relatório");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Este método é responsável por configurar as tabelas na PrincipaUI.class
    public void iniciar_tabelas() {
        /**
         * nova instância de um AbstractTableModel para configurar a tabela de
         * usuarios, e tabela animais
         */
        model_tabela_usuarios_completa = new Tabela_usuario_completa();
        model_tabela_animais = new Tabela_animais();
        model_tabela_adocoes =new Modelo_tabela_adocoes();
        
        //Setando o modelo criado acima nas tabelas
        jTable_usuarios.setModel(model_tabela_usuarios_completa);
        jTable_animais.setModel(model_tabela_animais);
        jTable_adocoes.setModel(model_tabela_adocoes);
        configurar_tabela_usuarios();
        configurar_tabela_animais();
        configurar_tabela_adocoes();
        atualizaTxtTotalDoacoes();
    }
    //evento lançado quando o botão Nova Especie no menu 'Arquivo' for clicado;
    //abre a janela de cadastro de Raca
    private void jMenuItem_nova_especieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_nova_especieActionPerformed
        new Nova_especie().setVisible(true);
    }//GEN-LAST:event_jMenuItem_nova_especieActionPerformed
    
    //evento lançado quando o botão Nova Raca no menu 'Arquivo' for clicado;
    //abre a janela de cadastro de Raca
    private void jMenuItem_nova_racaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_nova_racaActionPerformed
        new Nova_raca().setVisible(true);
    }//GEN-LAST:event_jMenuItem_nova_racaActionPerformed
    
    //evento lançado quando o botão Nova Cadastro no menu 'Arquivo' for clicado
    //abre a janela de cadastro de usuarios;
    private void btn_novo_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_novo_usuarioActionPerformed
        new Detalhe_usuario().setVisible(true);
    }//GEN-LAST:event_btn_novo_usuarioActionPerformed
    
    //método chamado quando o item selecionado do JComboBox de especie para pesqusa
    // for chamado.
    private void jCombo_box_especie_pesquisaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCombo_box_especie_pesquisaItemStateChanged
        
        try {
            //se o item selecionado nao for o primeiro, pois o valor do primeiro
            //item é apenas uma título e não uma especie
            if (jCombo_box_especie_pesquisa.getSelectedIndex() != 0) {
                
                //recupera o item selecionado em String
                String especie_name_selected = String.valueOf(jCombo_box_especie_pesquisa
                        .getSelectedItem());
                //recupera uma lista baseada no nome da espeécie
                List<Raca> lista_raca = new adotego.controller.RacaController()
                        .findRacaByEspecieName(especie_name_selected);
                
                //como alteramos o jComboBox especie podemos atualizadar
                //o jComboBox de raças para a especie selecionada
                refresh_JCombo_box_raca_pesquisa(lista_raca);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jCombo_box_especie_pesquisaItemStateChanged
    
    /*
    Este método é chamado sempre que o botão de Filtrar animais for clicado
    e é responsável por filtrar a lista de animais que está na tabela de
    de acordo com os parametros selecionado dos JComboBoxEspecie, JComboBoxRaca,
    e no jComboBoxSituaçao
    */
    private void btn_filtrar_animaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_filtrar_animaisActionPerformed
        
        int indexSelecionado = jCombo_box_especie_pesquisa.getSelectedIndex();
        try {
            //se o index selecionado for diferente do primeiro, pois setamos
            // no indice 0 o título da Jcombo
            if (indexSelecionado > 0) {
                
                //recupera o nome da especie selecionado
                String especie_name_selected = String.valueOf(jCombo_box_especie_pesquisa
                        .getSelectedItem());
                
                //recupera a lista de animais baseada na especie selecionada
                //anteriormente
                List<Animal> animais_lista = new adotego.controller.AnimalController()
                        .findByEspecieName(especie_name_selected);
                
                //se o index selecionado for diferente de primeiro, pois
                // setamos no primeiro indice como sendo o título
                if (jCombo_box_raca_pesquisa.getSelectedIndex() > 0) {
                    
                    //recupera a raca selecionada na jComboBox de raça
                    String raca = String.valueOf(jCombo_box_raca_pesquisa.getSelectedItem());
                    
                    //remover os animais que possuir raca diferente da selecionada
                    Iterator<Animal> iterator = animais_lista.iterator();
                    while (iterator.hasNext()) {
                        Animal animal = iterator.next();
                        //se a raça selecionada for for diferente da raças
                        //selecionada anteriormente, excluímos da lista
                        if (!animal.getRaca().getNome().equalsIgnoreCase(raca)) {
                            iterator.remove();
                        }
                    }
                }
                //atualizar graficamente a tabela de animais;
                model_tabela_animais.atualizar_tabela(animais_lista);
                
            } else if (indexSelecionado == 0) {
                //se o usuários selecionar o titulo do JComboBox especie,
                //mostraremos a tabela original, isto é, com todos os dados
                //cadastrados no banco em ordem alfabetica
                model_tabela_animais.atualizar_tabela();
            }
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btn_filtrar_animaisActionPerformed
    /*
    Este método é executado quando o botão de excluir animal for selecionado
    ele basicamente recupera o id selecionado na tabela e exclui o animal
    correspondente no banco de dados
    */
    private void btn_excluir_animalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluir_animalActionPerformed
        //recupera id
        int id = model_tabela_animais.getIdIntoTheRow(jTable_animais);
        //apaga o usuario correspondente
        new adotego.controller.AnimalController().delete(id);
        //atualiza a tabela
        model_tabela_animais.atualizar_tabela();
        
    }//GEN-LAST:event_btn_excluir_animalActionPerformed
    
    /*
    Este método é executado quando o botão editar animal for clicado, ele
    basicamente recupera o id selecionado e abre a janela para edição de
    animais com os campos de inputs já preenchidos para edição
    */
    private void btn_editar_animalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editar_animalActionPerformed
        int id_animal_selected = model_tabela_animais.getSelectedIndex(jTable_animais);
        Animal animal = model_tabela_animais.getAnimalByIndex(id_animal_selected);
        new Detalhe_animal().build(animal);
    }//GEN-LAST:event_btn_editar_animalActionPerformed
    /*
    Este método é executado quando o botão editar usuario for clicado, ele
    basicamente recupera o id selecionado e abre a janela para edição de
    usuarios com os campos de inputs já preenchidos para edição
    */
    private void btn_editar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editar_usuarioActionPerformed
        int id_select = model_tabela_usuarios_completa.getIdIntoTheRow(jTable_usuarios);
        Usuario u = new adotego.controller.UsuarioController().find(id_select);
        new Detalhe_usuario().build(u);
    }//GEN-LAST:event_btn_editar_usuarioActionPerformed
    
    /*
    Este método é executado quando o botão de excluir usuario for selecionado
    ele basicamente recupera o id selecionado na tabela e exclui o usuario
    correspondente no banco de dados
    */
    private void btn_excluir_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluir_usuarioActionPerformed
        int id_selected = model_tabela_usuarios_completa.getIdIntoTheRow(jTable_usuarios);
        new UsuarioController().delete(id_selected);
        model_tabela_usuarios_completa.atualizarTabela();
    }//GEN-LAST:event_btn_excluir_usuarioActionPerformed
    /*
    Este método identifica um duplo clique em algum usuario da tabela e
    abre a janela correspondete para edição, já com os campos inputs preeenchidos
    */
    private void jTable_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_usuariosMouseClicked
        if (evt.getClickCount() == 2) {
            int id_clicado = model_tabela_usuarios_completa.getIdIntoTheRow(jTable_usuarios);
            Usuario usuario = new adotego.controller.UsuarioController().find(id_clicado);
            new Detalhe_usuario().build(usuario);
        }
    }//GEN-LAST:event_jTable_usuariosMouseClicked
    /*
    Este método é invocado sempre que os valores do txt_pesquisa for alterado
    pelo usuario, ele é responsável por atualizar a tabela de acordo com
    os parametros da pesquisa
    */
    private void txt_pesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pesquisarKeyPressed
        // recupera uma String que está selecionado no jCombo_box_opcoes_busca
        // para que seja utilizado como parametro no filtro, retira os espaços,
        // etransforma tudo em letras minúsculas
        String parametro = String.valueOf(jCombo_box_opcoes_busca.getSelectedItem())
                .toLowerCase()
                .trim();
        
        //recupera o texto digitado pelo usuario para utilizarmos na pesquisa no
        //banco de dados
        String str_pesquisa = txt_pesquisar.getText().trim();
        
        //se o campo de pesquisa não estiver preenchido a tabela é atualizada
        //com todos os dados do banco
        if (str_pesquisa.isEmpty()) {
            model_tabela_usuarios_completa.atualizarTabela();
        } else {
            /*
            switch para identificar qual parametro está selecionado no
            jCombo_box_opcoes_busca e utiliza-lo como parametro para filtrar
            os resultados da tabela,
            Ex: se o campo nome estiver selecionado pesquisamos as ocorrencias
            do valor no campo input para filtrar os resultados
            */
            switch (parametro) {
                case "nome":
                    model_tabela_usuarios_completa
                            .setList(new UsuarioController()
                                    .findLikeName(str_pesquisa));
                    break;
                case "cpf":
                    model_tabela_usuarios_completa
                            .setList(new UsuarioController()
                                    .findLikeCpf(str_pesquisa));
                    break;
                case "email":
                    model_tabela_usuarios_completa
                            .setList(new UsuarioController()
                                    .findLikeEmail(str_pesquisa));
                    break;
                    
                default:
                    model_tabela_usuarios_completa.atualizarTabela();
            }
        }
        
    }//GEN-LAST:event_txt_pesquisarKeyPressed
    //este método abre a janela para cadastro de um novo animal
    private void jMenuItem_novo_animalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_novo_animalActionPerformed
        new Detalhe_animal().setVisible(true);
    }//GEN-LAST:event_jMenuItem_novo_animalActionPerformed
    //este método abre a janela para cadastro de um novo animal
    private void btn_novo_cadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_novo_cadastroActionPerformed
        new Detalhe_animal().setVisible(true);
    }//GEN-LAST:event_btn_novo_cadastroActionPerformed
    
    private void btn_nova_adocaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nova_adocaoActionPerformed
        
        new Nova_Adocao().setVisible(true);
    }//GEN-LAST:event_btn_nova_adocaoActionPerformed
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new Nova_Adocao().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    private void jInternalFrame2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jInternalFrame2FocusGained
        model_tabela_adocoes.atualiza();
        
    }//GEN-LAST:event_jInternalFrame2FocusGained
    
    private void btn_atualizar_tabela_adocoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atualizar_tabela_adocoesActionPerformed
        model_tabela_adocoes.atualiza();
        txt_total_doacoes.setText("");
        txt_total_doacoes.setText("R$:"+String
                .valueOf(model_tabela_adocoes.getTotal_doacoes()));
    }//GEN-LAST:event_btn_atualizar_tabela_adocoesActionPerformed
    
    private void btn_atualiza_tabela_usuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atualiza_tabela_usuariosActionPerformed
        model_tabela_usuarios_completa.atualizarTabela();
    }//GEN-LAST:event_btn_atualiza_tabela_usuariosActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalUI().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_atualiza_tabela_usuarios;
    private javax.swing.JButton btn_atualizar_tabela_adocoes;
    private javax.swing.JButton btn_editar_animal;
    private javax.swing.JButton btn_editar_usuario;
    private javax.swing.JButton btn_excluir_animal;
    private javax.swing.JButton btn_excluir_usuario;
    private javax.swing.JButton btn_filtrar_animais;
    private javax.swing.JMenu btn_nova_adocao;
    private javax.swing.JButton btn_novo_cadastro;
    private javax.swing.JMenuItem btn_novo_usuario;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox_situacao_pesquisa;
    private javax.swing.JComboBox<String> jCombo_box_especie_pesquisa;
    private javax.swing.JComboBox<String> jCombo_box_opcoes_busca;
    private javax.swing.JComboBox<String> jCombo_box_raca_pesquisa;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem_nova_especie;
    private javax.swing.JMenuItem jMenuItem_nova_raca;
    private javax.swing.JMenuItem jMenuItem_novo_animal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_adocoes;
    private javax.swing.JTable jTable_animais;
    private javax.swing.JTable jTable_usuarios;
    private javax.swing.JTextField txt_pesquisar;
    private javax.swing.JLabel txt_qnt_adocoes;
    private javax.swing.JLabel txt_qnt_animais_disponiveis;
    private javax.swing.JLabel txt_qnt_animais_disponiveis1;
    private javax.swing.JTextField txt_total_doacoes;
    // End of variables declaration//GEN-END:variables
    
    //inicializa o jCombo de especia de acordo com toas as especies
    // no banco de dados
    private void init_jCombo_box_especie_pesquisa()  {
        List<Especie> especies = new adotego.controller.EspecieController().findAll();
        jCombo_box_especie_pesquisa.addItem("Especie");
        for (Especie especie : especies) {
            jCombo_box_especie_pesquisa.addItem(especie.getNome());
        }
    }
    //atualiza o jCombo de raças para de acordo com a especie selecionada
    private void refresh_JCombo_box_raca_pesquisa(List<Raca> lista) {
        jCombo_box_raca_pesquisa.removeAllItems();
        jCombo_box_raca_pesquisa.addItem("Tudo");
        for (Raca raca : lista) {
            jCombo_box_raca_pesquisa.addItem(raca.getNome());
        }
    }
    /*
    O Jcombo de raças necessita que o Jcombo de especie esteja com algums item
    selecionado, antes preenchemos apenas com o titulo
    */
    private void init_jCombo_box_raca_pesquisa() {
        jCombo_box_raca_pesquisa.addItem("Raça");
    }
    
    /*
    Este método é responsável por configuras os tamanhos da colunas da tabela
    usuario
    */
    private void configurar_tabela_usuarios() {
        int columnCount = jTable_usuarios.getColumnCount();
        
         
        int width = jTable_usuarios.getWidth();
        for (int i = 0; i < columnCount; i++) {
            TableColumn column = jTable_usuarios.getColumnModel().getColumn(i);
            switch (i) {
                case 0:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.03))));
                    break;
                case 1:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.15))));
                    break;
                case 2:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.25))));
                    break;
                case 3:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.18))));
                    break;
                case 4:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.15))));
                    break;
                case 5:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.15))));
                    break;
                case 6:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.09))));
                    
            }
            
        }
    }
    
    //preenche o jCombo_situação de acordo com todos os registros da tabela
    //especie no banco de dados
    private void init_jCombo_box_situacao() {
        List<Situacao> situacoes = new adotego.controller.SituacaoController().findAll();
        for (Situacao sit : situacoes) {
            jComboBox_situacao_pesquisa.addItem(sit.getDescricao());
        }
        
    }
    
    //atualiza o input com o total de doações atualizado
    public void atualizaTxtTotalDoacoes(){
        txt_total_doacoes.setText("");
        txt_total_doacoes.setText("R$:"+model_tabela_adocoes.getTotal_doacoes());
    }
    
    /*
        Método responsável por configurar os tamanho da colunas na tabela de animais
    */
    private void configurar_tabela_animais() {
        int columnCount = jTable_animais.getColumnCount();
         
        int width = jTable_animais.getWidth();
        for (int i = 0; i < columnCount; i++) {
            TableColumn column = jTable_animais.getColumnModel().getColumn(i);
            switch (i) {
                case 0:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.05))));
                    break;
                case 1:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.20))));
                    break;
                case 2:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.15))));
                    break;
                case 3:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.30))));
                    break;
                case 4:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.30))));
                    
            }
            
        }
    }
    
    /*
        Atualiza as propriedades do painel de informalções da PrincipalUI
    */
    public void atualizar_informacoes() {
        txt_qnt_adocoes.setToolTipText("");
        txt_qnt_adocoes.setText(String.valueOf(
                new adotego.controller.AdocaoController().getTotalAdocoes()));
        
        
        txt_qnt_animais_disponiveis.setText("");
        
        
        //new adotego.controller.SituacaoController().getIdByName(Situacao_enum.DISPONIVEL.name());
        txt_qnt_animais_disponiveis.setText(String.valueOf(
                new adotego.controller.AnimalController().contarPorSituacao("disponivel".toUpperCase())));
        model_tabela_animais.atualizar_tabela();
    }

    /*
    Configura o tamanho das colunas da tabela_doações
    */
    private void configurar_tabela_adocoes() {
        int columnCount = jTable_adocoes.getColumnCount();         
        int width = jTable_adocoes.getWidth();
        for (int i = 0; i < columnCount; i++) {
            TableColumn column = jTable_adocoes.getColumnModel().getColumn(i);
            switch (i) {
                case 0:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.10))));
                    break;
                case 1:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.35))));
                    break;
                case 2:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.10))));
                    break;
                case 3:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.30))));
                    break;
                case 4:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width*0.15))));
                    
            }
            
        }
    }
    
    
    
}
