/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adotego.view;

import adotego.modelos.Adocao;
import adotego.modelos.Animal;
import adotego.modelos.Usuario;
import adotego.util.FontHelper;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author tmichelini
 */
public class Nova_Adocao extends javax.swing.JFrame {

    private static Usuario usuario;
    private static Animal animal;
    private static Modelo_tabela_animal_adocao modelo_animal_adocao;
    private static Modelo_tabela_usuario_adocao modelo_usuario_adocao;
    private Adocao adocao;

    /**
     * Creates new form Nova_Adocao
     */
    public Nova_Adocao() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Nova Adoção");
        modelo_animal_adocao = new Modelo_tabela_animal_adocao();
        modelo_usuario_adocao = new Modelo_tabela_usuario_adocao();
        jTable_animal_adocao.setModel(modelo_animal_adocao);
        jTable_usuario_adocao.setModel(modelo_usuario_adocao);
        usuario = new Usuario();
        animal = new Animal();
        configurarTabelas();
        configurarFontes();
        configurarIcone();
        this.setResizable(false);
        adocao = new Adocao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jInternalFrameAdocao = new javax.swing.JInternalFrame();
        btn_gerar_adocao = new javax.swing.JButton();
        txt_doacao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btn_selecionar_animal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_animal_adocao = new javax.swing.JTable();
        btn_selecionar_usuario = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_usuario_adocao = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerar Adoção");

        jPanel1.setBackground(new java.awt.Color(241, 243, 244));

        jInternalFrameAdocao.setBackground(new java.awt.Color(255, 255, 255));
        jInternalFrameAdocao.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jInternalFrameAdocao.setVisible(true);

        btn_gerar_adocao.setBackground(new java.awt.Color(255, 255, 255));
        btn_gerar_adocao.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_gerar_adocao.setText("Gerar");
        btn_gerar_adocao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btn_gerar_adocao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gerar_adocaoActionPerformed(evt);
            }
        });

        jLabel1.setText("Doação R$");

        btn_selecionar_animal.setBackground(new java.awt.Color(255, 255, 255));
        btn_selecionar_animal.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btn_selecionar_animal.setText("Selecionar Animal");
        btn_selecionar_animal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_selecionar_animal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selecionar_animalActionPerformed(evt);
            }
        });

        jTable_animal_adocao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_animal_adocao);

        btn_selecionar_usuario.setBackground(new java.awt.Color(255, 255, 255));
        btn_selecionar_usuario.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btn_selecionar_usuario.setText("Selecionar Usuario");
        btn_selecionar_usuario.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_selecionar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selecionar_usuarioActionPerformed(evt);
            }
        });

        jTable_usuario_adocao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable_usuario_adocao);

        javax.swing.GroupLayout jInternalFrameAdocaoLayout = new javax.swing.GroupLayout(jInternalFrameAdocao.getContentPane());
        jInternalFrameAdocao.getContentPane().setLayout(jInternalFrameAdocaoLayout);
        jInternalFrameAdocaoLayout.setHorizontalGroup(
            jInternalFrameAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameAdocaoLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jInternalFrameAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_gerar_adocao, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrameAdocaoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_doacao, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(jInternalFrameAdocaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jInternalFrameAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_selecionar_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_selecionar_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrameAdocaoLayout.setVerticalGroup(
            jInternalFrameAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameAdocaoLayout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_selecionar_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_selecionar_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jInternalFrameAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_doacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_gerar_adocao, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jInternalFrameAdocao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrameAdocao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_selecionar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selecionar_usuarioActionPerformed
        new Lista_usuarios().setVisible(true);

    }//GEN-LAST:event_btn_selecionar_usuarioActionPerformed

    private void btn_selecionar_animalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selecionar_animalActionPerformed
        new Lista_animal().setVisible(true);
    }//GEN-LAST:event_btn_selecionar_animalActionPerformed

    private void btn_gerar_adocaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gerar_adocaoActionPerformed
        
        adocao.setAnimal(this.animal);
        adocao.setUsuario(this.usuario);
        //       adocao.setValor(Double.parseDouble(txt_doacao.getText().trim()));
        adocao.setData(Calendar.getInstance());
        if (adocao.getId() == 0) {
            new adotego.controller.AdocaoController().salvar(adocao);
            new adotego.controller.AnimalController().setarComoAdotado(animal);
            this.dispose();
        } else {
            new adotego.controller.AdocaoController().update(adocao);
            new adotego.controller.AnimalController().setarComoAdotado(animal);
            this.dispose();
        }
    }//GEN-LAST:event_btn_gerar_adocaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Nova_Adocao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Nova_Adocao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Nova_Adocao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nova_Adocao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nova_Adocao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_gerar_adocao;
    private javax.swing.JButton btn_selecionar_animal;
    private javax.swing.JButton btn_selecionar_usuario;
    private javax.swing.JInternalFrame jInternalFrameAdocao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_animal_adocao;
    private javax.swing.JTable jTable_usuario_adocao;
    private javax.swing.JTextField txt_doacao;
    // End of variables declaration//GEN-END:variables

    public static void setUsuario(Usuario u) {
        Nova_Adocao.usuario = u;
        modelo_usuario_adocao.inserirUsuario(usuario);
    }

    public static void setAnimal(Animal a) {
        Nova_Adocao.animal = a;
        modelo_animal_adocao.inserirAnimal(animal);
    }

    public void build(Adocao a) {
        adocao = a;
        preencher_campos();
    }

    private void preencher_campos() {

        if (!this.isVisible()) {
            this.setVisible(true);
        }
    }

    private void configurarFontes() {
        FontHelper fh = new FontHelper();

        jTable_animal_adocao.setFont(fh.getLatoRegular(15f));
        jTable_animal_adocao.getTableHeader().setFont(fh.getLatoBold(18f));

        jTable_usuario_adocao.setFont(fh.getLatoRegular(15f));
        jTable_usuario_adocao.getTableHeader().setFont(fh.getLatoBold(18f));

        btn_gerar_adocao.setFont(fh.getLatoBold(16f));
        btn_selecionar_animal.setFont(fh.getLatoBold(16f));
        btn_selecionar_usuario.setFont(fh.getLatoBold(16f));
        jInternalFrameAdocao.setFont(fh.getLatoBold(17f));
    }

    private void configurarTabelas() {
        configurarTabelaUsuarios();
        configurarTabelaAdocao();
    }

    private void configurarTabelaUsuarios() {
        jTable_animal_adocao.setRowHeight(26);
        jTable_animal_adocao.getTableHeader().setBackground(Color.WHITE);
        int columnCount = jTable_animal_adocao.getColumnCount();
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalAlignment(SwingConstants.CENTER);

        int width = jTable_animal_adocao.getWidth();
        for (int i = 0; i < columnCount; i++) {
            TableColumn column = jTable_animal_adocao.getColumnModel().getColumn(i);
            column.setCellRenderer(dtcr);

            switch (i) {
                case 0:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width * 0.20))));
                    break;
                case 1:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width * 0.80))));
                    break;

            }

        }
    }

    private void configurarTabelaAdocao() {
        jTable_usuario_adocao.setRowHeight(26);
        jTable_usuario_adocao.getTableHeader().setBackground(Color.WHITE);
        int columnCount = jTable_usuario_adocao.getColumnCount();
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalAlignment(SwingConstants.CENTER);

        int width = jTable_usuario_adocao.getWidth();
        for (int i = 0; i < columnCount; i++) {
            TableColumn column = jTable_usuario_adocao.getColumnModel().getColumn(i);
            column.setCellRenderer(dtcr);

            switch (i) {
                case 0:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width * 0.20))));
                    break;
                case 1:
                    column.setPreferredWidth(Integer
                            .parseInt(String.valueOf(Math.round(width * 0.80))));
                    break;

            }

        }
    }

    private void configurarIcone() {
        ImageIcon icon = new ImageIcon("src/icones/Favicon.png");

        this.setIconImage(icon.getImage());
    }
}

class Modelo_tabela_animal_adocao extends AbstractTableModel {

    List<Animal> animais;
    String[] colunas = new String[]{"Código", "Nome"};

    public Modelo_tabela_animal_adocao() {
        animais = new ArrayList<>();
    }

    @Override
    public int getRowCount() {
        return animais.size();
    }

    @Override
    public int getColumnCount() {
        return colunas.length;
    }

    @Override
    public Object getValueAt(int rowIndex, int columnIndex) {
        Animal a = animais.get(rowIndex);
        switch (columnIndex) {
            case 0:
                return a.getId();
            case 1:
                return a.getNome();
            default:
                return "--";
        }
    }

    @Override
    public String getColumnName(int column) {
        return colunas[column];
    }

    public int getIdIntoTheRow(JTable table) {
        int row = table.getSelectedRow();
        String val = String.valueOf(table.getValueAt(row, 0));
        return Integer.parseInt(val);
    }

    public void removeAll() {
        this.animais = new ArrayList<>();
        this.fireTableDataChanged();
    }

    public void inserirAnimal(Animal animal) {
        if (animais.isEmpty()) {
            animais.add(animal);
            this.fireTableDataChanged();
        } else {
            this.removeAll();
            animais.add(animal);
            this.fireTableDataChanged();
        }
    }

}

class Modelo_tabela_usuario_adocao extends AbstractTableModel {

    List<Usuario> usuarios;
    String[] colunas = new String[]{"Código", "Nome"};

    public Modelo_tabela_usuario_adocao() {
        usuarios = new ArrayList<>();
    }

    @Override
    public int getRowCount() {
        return usuarios.size();
    }

    @Override
    public int getColumnCount() {
        return colunas.length;
    }

    @Override
    public Object getValueAt(int rowIndex, int columnIndex) {
        Usuario a = usuarios.get(rowIndex);
        switch (columnIndex) {
            case 0:
                return a.getId();
            case 1:
                return a.getNome();
            default:
                return "--";
        }
    }

    @Override
    public String getColumnName(int column) {
        return colunas[column];
    }

    public int getIdIntoTheRow(JTable table) {
        int row = table.getSelectedRow();
        String val = String.valueOf(table.getValueAt(row, 0));
        return Integer.parseInt(val);
    }

    public void inserirUsuario(Usuario usuario) {
        if (usuarios.isEmpty()) {
            usuarios.add(usuario);
            this.fireTableDataChanged();
        } else {
            this.removeAll();
            usuarios.add(usuario);
            this.fireTableDataChanged();
        }
    }

    public void removeAll() {
        usuarios = new ArrayList<>();
        this.fireTableDataChanged();
    }

}
